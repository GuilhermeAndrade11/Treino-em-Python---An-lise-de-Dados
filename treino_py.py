# -*- coding: utf-8 -*-
"""Treino_py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CgU_P6Z5GClc6lDNqUFzXk2IO0HhEXFa
"""

import pandas as pd
import random

# Gerando dados fictícios
num_registros = 100

data = {
    'id_venda': range(1, num_registros + 1),
    'produto': [random.choice(['Ração Premium 1kg', 'Brinquedo de Pena', 'Arranhador de Gato', 'Cama Fofinha', 'Pote de Água Automático']) for _ in range(num_registros)],
    'categoria': [random.choice(['Alimentação', 'Brinquedos', 'Móveis', 'Conforto', 'Acessórios']) for _ in range(num_registros)],
    'valor_venda': [round(random.uniform(25.0, 350.0), 2) for _ in range(num_registros)],
    'metodo_pagamento': [random.choice(['Cartão de Crédito', 'PIX', 'Boleto']) for _ in range(num_registros)],
    'data_venda': pd.to_datetime(pd.date_range('2024-01-01', periods=num_registros, freq='D'))
}

df = pd.DataFrame(data)

# Salvando o DataFrame como um arquivo CSV fictício
nome_arquivo = 'vendas_lojinha_do_gato.csv'
df.to_csv(nome_arquivo, index=False)

print(f'Banco de dados fictício "{nome_arquivo}" criado com sucesso!')

# Essa função (.head) mostra as cinco primeiras linhas de um dataframe.
df.head()

# A função ".info" mostra os tipos de dados e se há valores nulos.
df.info ()

# A função '.describe()' serve para obter estatísticas descritivas básicas das colunas numéricas.
df.describe()

# Pergunta 1: Qual é o valor total de vendas do trimestre?

vendas = df['valor_venda'].sum()
print (vendas)

# Pergunta 2: Qual é o produto mais vendido (em quantidade de vendas)?

pdr_vendido = df.groupby('produto')['id_venda'].count()
print(pdr_vendido)

# Continuação (e resposta final) da Pergunta 2
pdr_vendido.idxmax()

# Pergunta 3: Qual categoria de produto gerou a maior receita total?

receita = df.groupby('categoria')['valor_venda'].sum()
print (receita)

receita.idxmax()

# Pergunta 4: Qual é o método de pagamento mais utilizado?

pagamentos = df.groupby('metodo_pagamento')['id_venda'].count()
print (pagamentos)

pagamentos.idxmax()

# Pergunta 5: Qual é o valor médio das vendas por categoria?

df.groupby('categoria')['valor_venda'].mean()

import matplotlib.pyplot as plt

# Crie um gráfico de barras que mostre o valor total de vendas por categoria.

plt.bar(receita.index, receita.values, color='skyblue')
plt.xlabel('Categoria')
plt.ylabel('Valor total de vendas')
plt.title('Vendas por Categoria')
plt.xticks(rotation=45, ha='right') # Rotate labels for better readability
plt.tight_layout() # Adjust layout to prevent labels from overlapping
plt.show()

# Crie um gráfico de pizza (pie chart) que mostre a proporção de cada método de pagamento.

plt.pie(pagamentos.values, labels = pagamentos.index, autopct='%1.1f%%', startangle=90)
plt.title('Proporção de Métodos de Pagamento')
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.
plt.show()